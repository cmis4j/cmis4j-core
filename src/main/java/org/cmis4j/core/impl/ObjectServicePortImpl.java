/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package org.cmis4j.core.impl;

import java.util.logging.Logger;

import org.oasis_open.docs.ns.cmis.ws._200908.CmisException;
import org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort;

/**
 * This class was generated by Apache CXF 2.7.7 2014-02-19T05:53:39.531-06:00
 * Generated source version: 2.7.7
 * 
 */

@javax.jws.WebService(serviceName = "ObjectService", portName = "ObjectServicePort", targetNamespace = "http://docs.oasis-open.org/ns/cmis/ws/200908/", endpointInterface = "org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort")
public class ObjectServicePortImpl implements ObjectServicePort {

	private static final Logger LOG = Logger
			.getLogger(ObjectServicePortImpl.class.getName());

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#getProperties
	 * (java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)java.lang.String filter
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType getProperties(
			java.lang.String repositoryId,
			java.lang.String objectId,
			java.lang.String filter,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType extension)
			throws CmisException {
		LOG.info("Executing operation getProperties");
		System.out.println(repositoryId);
		System.out.println(objectId);
		System.out.println(filter);
		System.out.println(extension);
		try {
			org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#deleteObject
	 * (java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)java.lang.Boolean allVersions
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public void deleteObject(
			java.lang.String repositoryId,
			java.lang.String objectId,
			java.lang.Boolean allVersions,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension)
			throws CmisException {
		LOG.info("Executing operation deleteObject");
		System.out.println(repositoryId);
		System.out.println(objectId);
		System.out.println(allVersions);
		System.out.println(extension.value);
		try {
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#getObject(java
	 * .lang.String repositoryId ,)java.lang.String objectId ,)java.lang.String
	 * filter ,)java.lang.Boolean includeAllowableActions
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.EnumIncludeRelationships
	 * includeRelationships ,)java.lang.String renditionFilter
	 * ,)java.lang.Boolean includePolicyIds ,)java.lang.Boolean includeACL
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public org.oasis_open.docs.ns.cmis.core._200908.CmisObjectType getObject(
			java.lang.String repositoryId,
			java.lang.String objectId,
			java.lang.String filter,
			java.lang.Boolean includeAllowableActions,
			org.oasis_open.docs.ns.cmis.core._200908.EnumIncludeRelationships includeRelationships,
			java.lang.String renditionFilter,
			java.lang.Boolean includePolicyIds,
			java.lang.Boolean includeACL,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType extension)
			throws CmisException {
		LOG.info("Executing operation getObject");
		System.out.println(repositoryId);
		System.out.println(objectId);
		System.out.println(filter);
		System.out.println(includeAllowableActions);
		System.out.println(includeRelationships);
		System.out.println(renditionFilter);
		System.out.println(includePolicyIds);
		System.out.println(includeACL);
		System.out.println(extension);
		try {
			org.oasis_open.docs.ns.cmis.core._200908.CmisObjectType _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#
	 * createDocumentFromSource(java.lang.String repositoryId ,)java.lang.String
	 * sourceId ,)org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType
	 * properties ,)java.lang.String folderId
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.EnumVersioningState
	 * versioningState ,)java.util.List<java.lang.String> policies
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * addACEs
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * removeACEs
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension ,)java.lang.String objectId )*
	 */
	@Override
	public void createDocumentFromSource(
			java.lang.String repositoryId,
			java.lang.String sourceId,
			org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties,
			java.lang.String folderId,
			org.oasis_open.docs.ns.cmis.core._200908.EnumVersioningState versioningState,
			java.util.List<java.lang.String> policies,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType addACEs,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType removeACEs,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension,
			javax.xml.ws.Holder<java.lang.String> objectId)
			throws CmisException {
		LOG.info("Executing operation createDocumentFromSource");
		System.out.println(repositoryId);
		System.out.println(sourceId);
		System.out.println(properties);
		System.out.println(folderId);
		System.out.println(versioningState);
		System.out.println(policies);
		System.out.println(addACEs);
		System.out.println(removeACEs);
		System.out.println(extension.value);
		try {
			java.lang.String objectIdValue = "";
			objectId.value = objectIdValue;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#getAllowableActions
	 * (java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public org.oasis_open.docs.ns.cmis.core._200908.CmisAllowableActionsType getAllowableActions(
			java.lang.String repositoryId,
			java.lang.String objectId,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType extension)
			throws CmisException {
		LOG.info("Executing operation getAllowableActions");
		System.out.println(repositoryId);
		System.out.println(objectId);
		System.out.println(extension);
		try {
			org.oasis_open.docs.ns.cmis.core._200908.CmisAllowableActionsType _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#createRelationship
	 * (java.lang.String repositoryId
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties
	 * ,)java.util.List<java.lang.String> policies
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * addACEs
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * removeACEs
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension ,)java.lang.String objectId )*
	 */
	@Override
	public void createRelationship(
			java.lang.String repositoryId,
			org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties,
			java.util.List<java.lang.String> policies,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType addACEs,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType removeACEs,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension,
			javax.xml.ws.Holder<java.lang.String> objectId)
			throws CmisException {
		LOG.info("Executing operation createRelationship");
		System.out.println(repositoryId);
		System.out.println(properties);
		System.out.println(policies);
		System.out.println(addACEs);
		System.out.println(removeACEs);
		System.out.println(extension.value);
		try {
			java.lang.String objectIdValue = "";
			objectId.value = objectIdValue;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#deleteContentStream
	 * (java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)java.lang.String changeToken
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public void deleteContentStream(
			java.lang.String repositoryId,
			javax.xml.ws.Holder<java.lang.String> objectId,
			javax.xml.ws.Holder<java.lang.String> changeToken,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension)
			throws CmisException {
		LOG.info("Executing operation deleteContentStream");
		System.out.println(repositoryId);
		System.out.println(objectId.value);
		System.out.println(changeToken.value);
		System.out.println(extension.value);
		try {
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#bulkUpdateProperties
	 * (java.lang.String repositoryId
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisBulkUpdateType
	 * bulkUpdateData
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisObjectIdAndChangeTokenType
	 * objectIdAndChangeToken )*
	 */
	@Override
	public void bulkUpdateProperties(
			java.lang.String repositoryId,
			org.oasis_open.docs.ns.cmis.core._200908.CmisBulkUpdateType bulkUpdateData,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.core._200908.CmisObjectIdAndChangeTokenType> objectIdAndChangeToken)
			throws CmisException {
		LOG.info("Executing operation bulkUpdateProperties");
		System.out.println(repositoryId);
		System.out.println(bulkUpdateData);
		System.out.println(extension.value);
		try {
			org.oasis_open.docs.ns.cmis.core._200908.CmisObjectIdAndChangeTokenType objectIdAndChangeTokenValue = null;
			objectIdAndChangeToken.value = objectIdAndChangeTokenValue;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#getContentStream
	 * (java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)java.lang.String streamId ,)java.math.BigInteger offset
	 * ,)java.math.BigInteger length
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public org.oasis_open.docs.ns.cmis.messaging._200908.CmisContentStreamType getContentStream(
			java.lang.String repositoryId,
			java.lang.String objectId,
			java.lang.String streamId,
			java.math.BigInteger offset,
			java.math.BigInteger length,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType extension)
			throws CmisException {
		LOG.info("Executing operation getContentStream");
		System.out.println(repositoryId);
		System.out.println(objectId);
		System.out.println(streamId);
		System.out.println(offset);
		System.out.println(length);
		System.out.println(extension);
		try {
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisContentStreamType _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#deleteTree(java
	 * .lang.String repositoryId ,)java.lang.String folderId ,)java.lang.Boolean
	 * allVersions ,)org.oasis_open.docs.ns.cmis.core._200908.EnumUnfileObject
	 * unfileObjects ,)java.lang.Boolean continueOnFailure
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public org.oasis_open.docs.ns.cmis.messaging._200908.DeleteTreeResponse.FailedToDelete deleteTree(
			java.lang.String repositoryId,
			java.lang.String folderId,
			java.lang.Boolean allVersions,
			org.oasis_open.docs.ns.cmis.core._200908.EnumUnfileObject unfileObjects,
			java.lang.Boolean continueOnFailure,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType extension)
			throws CmisException {
		LOG.info("Executing operation deleteTree");
		System.out.println(repositoryId);
		System.out.println(folderId);
		System.out.println(allVersions);
		System.out.println(unfileObjects);
		System.out.println(continueOnFailure);
		System.out.println(extension);
		try {
			org.oasis_open.docs.ns.cmis.messaging._200908.DeleteTreeResponse.FailedToDelete _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#getObjectByPath
	 * (java.lang.String repositoryId ,)java.lang.String path ,)java.lang.String
	 * filter ,)java.lang.Boolean includeAllowableActions
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.EnumIncludeRelationships
	 * includeRelationships ,)java.lang.String renditionFilter
	 * ,)java.lang.Boolean includePolicyIds ,)java.lang.Boolean includeACL
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public org.oasis_open.docs.ns.cmis.core._200908.CmisObjectType getObjectByPath(
			java.lang.String repositoryId,
			java.lang.String path,
			java.lang.String filter,
			java.lang.Boolean includeAllowableActions,
			org.oasis_open.docs.ns.cmis.core._200908.EnumIncludeRelationships includeRelationships,
			java.lang.String renditionFilter,
			java.lang.Boolean includePolicyIds,
			java.lang.Boolean includeACL,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType extension)
			throws CmisException {
		LOG.info("Executing operation getObjectByPath");
		System.out.println(repositoryId);
		System.out.println(path);
		System.out.println(filter);
		System.out.println(includeAllowableActions);
		System.out.println(includeRelationships);
		System.out.println(renditionFilter);
		System.out.println(includePolicyIds);
		System.out.println(includeACL);
		System.out.println(extension);
		try {
			org.oasis_open.docs.ns.cmis.core._200908.CmisObjectType _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#updateProperties
	 * (java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)java.lang.String changeToken
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public void updateProperties(
			java.lang.String repositoryId,
			javax.xml.ws.Holder<java.lang.String> objectId,
			javax.xml.ws.Holder<java.lang.String> changeToken,
			org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension)
			throws CmisException {
		LOG.info("Executing operation updateProperties");
		System.out.println(repositoryId);
		System.out.println(objectId.value);
		System.out.println(changeToken.value);
		System.out.println(properties);
		System.out.println(extension.value);
		try {
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#createItem(java
	 * .lang.String repositoryId
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties
	 * ,)java.lang.String folderId
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * addACEs
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * removeACEs
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension ,)java.lang.String objectId )*
	 */
	@Override
	public void createItem(
			java.lang.String repositoryId,
			org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties,
			java.lang.String folderId,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType addACEs,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType removeACEs,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension,
			javax.xml.ws.Holder<java.lang.String> objectId)
			throws CmisException {
		LOG.info("Executing operation createItem");
		System.out.println(repositoryId);
		System.out.println(properties);
		System.out.println(folderId);
		System.out.println(addACEs);
		System.out.println(removeACEs);
		System.out.println(extension.value);
		try {
			java.lang.String objectIdValue = "";
			objectId.value = objectIdValue;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#createDocument
	 * (java.lang.String repositoryId
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties
	 * ,)java.lang.String folderId
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisContentStreamType
	 * contentStream
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.EnumVersioningState
	 * versioningState ,)java.util.List<java.lang.String> policies
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * addACEs
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * removeACEs
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension ,)java.lang.String objectId )*
	 */
	@Override
	public void createDocument(
			java.lang.String repositoryId,
			org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties,
			java.lang.String folderId,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisContentStreamType contentStream,
			org.oasis_open.docs.ns.cmis.core._200908.EnumVersioningState versioningState,
			java.util.List<java.lang.String> policies,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType addACEs,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType removeACEs,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension,
			javax.xml.ws.Holder<java.lang.String> objectId)
			throws CmisException {
		LOG.info("Executing operation createDocument");
		System.out.println(repositoryId);
		System.out.println(properties);
		System.out.println(folderId);
		System.out.println(contentStream);
		System.out.println(versioningState);
		System.out.println(policies);
		System.out.println(addACEs);
		System.out.println(removeACEs);
		System.out.println(extension.value);
		try {
			java.lang.String objectIdValue = "";
			objectId.value = objectIdValue;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#createPolicy
	 * (java.lang.String repositoryId
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties
	 * ,)java.lang.String folderId ,)java.util.List<java.lang.String> policies
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * addACEs
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * removeACEs
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension ,)java.lang.String objectId )*
	 */
	@Override
	public void createPolicy(
			java.lang.String repositoryId,
			org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties,
			java.lang.String folderId,
			java.util.List<java.lang.String> policies,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType addACEs,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType removeACEs,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension,
			javax.xml.ws.Holder<java.lang.String> objectId)
			throws CmisException {
		LOG.info("Executing operation createPolicy");
		System.out.println(repositoryId);
		System.out.println(properties);
		System.out.println(folderId);
		System.out.println(policies);
		System.out.println(addACEs);
		System.out.println(removeACEs);
		System.out.println(extension.value);
		try {
			java.lang.String objectIdValue = "";
			objectId.value = objectIdValue;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#appendContentStream
	 * (java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)java.lang.Boolean isLastChunk ,)java.lang.String changeToken
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisContentStreamType
	 * contentStream
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public void appendContentStream(
			java.lang.String repositoryId,
			javax.xml.ws.Holder<java.lang.String> objectId,
			java.lang.Boolean isLastChunk,
			javax.xml.ws.Holder<java.lang.String> changeToken,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisContentStreamType contentStream,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension)
			throws CmisException {
		LOG.info("Executing operation appendContentStream");
		System.out.println(repositoryId);
		System.out.println(objectId.value);
		System.out.println(isLastChunk);
		System.out.println(changeToken.value);
		System.out.println(contentStream);
		System.out.println(extension.value);
		try {
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#getRenditions
	 * (java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)java.lang.String renditionFilter ,)java.math.BigInteger maxItems
	 * ,)java.math.BigInteger skipCount
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public java.util.List<org.oasis_open.docs.ns.cmis.core._200908.CmisRenditionType> getRenditions(
			java.lang.String repositoryId,
			java.lang.String objectId,
			java.lang.String renditionFilter,
			java.math.BigInteger maxItems,
			java.math.BigInteger skipCount,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType extension)
			throws CmisException {
		LOG.info("Executing operation getRenditions");
		System.out.println(repositoryId);
		System.out.println(objectId);
		System.out.println(renditionFilter);
		System.out.println(maxItems);
		System.out.println(skipCount);
		System.out.println(extension);
		try {
			java.util.List<org.oasis_open.docs.ns.cmis.core._200908.CmisRenditionType> _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#setContentStream
	 * (java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)java.lang.Boolean overwriteFlag ,)java.lang.String changeToken
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisContentStreamType
	 * contentStream
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public void setContentStream(
			java.lang.String repositoryId,
			javax.xml.ws.Holder<java.lang.String> objectId,
			java.lang.Boolean overwriteFlag,
			javax.xml.ws.Holder<java.lang.String> changeToken,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisContentStreamType contentStream,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension)
			throws CmisException {
		LOG.info("Executing operation setContentStream");
		System.out.println(repositoryId);
		System.out.println(objectId.value);
		System.out.println(overwriteFlag);
		System.out.println(changeToken.value);
		System.out.println(contentStream);
		System.out.println(extension.value);
		try {
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#moveObject(java
	 * .lang.String repositoryId ,)java.lang.String objectId ,)java.lang.String
	 * targetFolderId ,)java.lang.String sourceFolderId
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public void moveObject(
			java.lang.String repositoryId,
			javax.xml.ws.Holder<java.lang.String> objectId,
			java.lang.String targetFolderId,
			java.lang.String sourceFolderId,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension)
			throws CmisException {
		LOG.info("Executing operation moveObject");
		System.out.println(repositoryId);
		System.out.println(objectId.value);
		System.out.println(targetFolderId);
		System.out.println(sourceFolderId);
		System.out.println(extension.value);
		try {
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.ObjectServicePort#createFolder
	 * (java.lang.String repositoryId
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties
	 * ,)java.lang.String folderId ,)java.util.List<java.lang.String> policies
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * addACEs
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * removeACEs
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension ,)java.lang.String objectId )*
	 */
	@Override
	public void createFolder(
			java.lang.String repositoryId,
			org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties,
			java.lang.String folderId,
			java.util.List<java.lang.String> policies,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType addACEs,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType removeACEs,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension,
			javax.xml.ws.Holder<java.lang.String> objectId)
			throws CmisException {
		LOG.info("Executing operation createFolder");
		System.out.println(repositoryId);
		System.out.println(properties);
		System.out.println(folderId);
		System.out.println(policies);
		System.out.println(addACEs);
		System.out.println(removeACEs);
		System.out.println(extension.value);
		try {
			java.lang.String objectIdValue = "";
			objectId.value = objectIdValue;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

}
