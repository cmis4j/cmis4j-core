/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package org.cmis4j.core.impl;

import java.util.logging.Logger;

import org.oasis_open.docs.ns.cmis.ws._200908.CmisException;
import org.oasis_open.docs.ns.cmis.ws._200908.VersioningServicePort;

/**
 * This class was generated by Apache CXF 2.7.7 2014-02-19T05:53:39.562-06:00
 * Generated source version: 2.7.7
 * 
 */

@javax.jws.WebService(serviceName = "VersioningService", portName = "VersioningServicePort", targetNamespace = "http://docs.oasis-open.org/ns/cmis/ws/200908/", endpointInterface = "org.oasis_open.docs.ns.cmis.ws._200908.VersioningServicePort")
public class VersioningServicePortImpl implements VersioningServicePort {

	private static final Logger LOG = Logger
			.getLogger(VersioningServicePortImpl.class.getName());

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.VersioningServicePort#getAllVersions
	 * (java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)java.lang.String filter ,)java.lang.Boolean includeAllowableActions
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public java.util.List<org.oasis_open.docs.ns.cmis.core._200908.CmisObjectType> getAllVersions(
			java.lang.String repositoryId,
			java.lang.String objectId,
			java.lang.String filter,
			java.lang.Boolean includeAllowableActions,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType extension)
			throws CmisException {
		LOG.info("Executing operation getAllVersions");
		System.out.println(repositoryId);
		System.out.println(objectId);
		System.out.println(filter);
		System.out.println(includeAllowableActions);
		System.out.println(extension);
		try {
			java.util.List<org.oasis_open.docs.ns.cmis.core._200908.CmisObjectType> _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.VersioningServicePort#checkOut
	 * (java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension ,)java.lang.Boolean contentCopied )*
	 */
	@Override
	public void checkOut(
			java.lang.String repositoryId,
			javax.xml.ws.Holder<java.lang.String> objectId,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension,
			javax.xml.ws.Holder<java.lang.Boolean> contentCopied)
			throws CmisException {
		LOG.info("Executing operation checkOut");
		System.out.println(repositoryId);
		System.out.println(objectId.value);
		System.out.println(extension.value);
		try {
			java.lang.Boolean contentCopiedValue = null;
			contentCopied.value = contentCopiedValue;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see org.oasis_open.docs.ns.cmis.ws._200908.VersioningServicePort#
	 * getObjectOfLatestVersion(java.lang.String repositoryId ,)java.lang.String
	 * objectId ,)java.lang.Boolean major ,)java.lang.String filter
	 * ,)java.lang.Boolean includeAllowableActions
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.EnumIncludeRelationships
	 * includeRelationships ,)java.lang.String renditionFilter
	 * ,)java.lang.Boolean includePolicyIds ,)java.lang.Boolean includeACL
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public org.oasis_open.docs.ns.cmis.core._200908.CmisObjectType getObjectOfLatestVersion(
			java.lang.String repositoryId,
			java.lang.String objectId,
			java.lang.Boolean major,
			java.lang.String filter,
			java.lang.Boolean includeAllowableActions,
			org.oasis_open.docs.ns.cmis.core._200908.EnumIncludeRelationships includeRelationships,
			java.lang.String renditionFilter,
			java.lang.Boolean includePolicyIds,
			java.lang.Boolean includeACL,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType extension)
			throws CmisException {
		LOG.info("Executing operation getObjectOfLatestVersion");
		System.out.println(repositoryId);
		System.out.println(objectId);
		System.out.println(major);
		System.out.println(filter);
		System.out.println(includeAllowableActions);
		System.out.println(includeRelationships);
		System.out.println(renditionFilter);
		System.out.println(includePolicyIds);
		System.out.println(includeACL);
		System.out.println(extension);
		try {
			org.oasis_open.docs.ns.cmis.core._200908.CmisObjectType _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see org.oasis_open.docs.ns.cmis.ws._200908.VersioningServicePort#
	 * getPropertiesOfLatestVersion(java.lang.String repositoryId
	 * ,)java.lang.String objectId ,)java.lang.Boolean major ,)java.lang.String
	 * filter ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType getPropertiesOfLatestVersion(
			java.lang.String repositoryId,
			java.lang.String objectId,
			java.lang.Boolean major,
			java.lang.String filter,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType extension)
			throws CmisException {
		LOG.info("Executing operation getPropertiesOfLatestVersion");
		System.out.println(repositoryId);
		System.out.println(objectId);
		System.out.println(major);
		System.out.println(filter);
		System.out.println(extension);
		try {
			org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType _return = null;
			return _return;
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.VersioningServicePort#cancelCheckOut
	 * (java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public void cancelCheckOut(
			java.lang.String repositoryId,
			java.lang.String objectId,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension)
			throws CmisException {
		LOG.info("Executing operation cancelCheckOut");
		System.out.println(repositoryId);
		System.out.println(objectId);
		System.out.println(extension.value);
		try {
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see
	 * org.oasis_open.docs.ns.cmis.ws._200908.VersioningServicePort#checkIn(
	 * java.lang.String repositoryId ,)java.lang.String objectId
	 * ,)java.lang.Boolean major
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisContentStreamType
	 * contentStream ,)java.lang.String checkinComment
	 * ,)java.util.List<java.lang.String> policies
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * addACEs
	 * ,)org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType
	 * removeACEs
	 * ,)org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType
	 * extension )*
	 */
	@Override
	public void checkIn(
			java.lang.String repositoryId,
			javax.xml.ws.Holder<java.lang.String> objectId,
			java.lang.Boolean major,
			org.oasis_open.docs.ns.cmis.core._200908.CmisPropertiesType properties,
			org.oasis_open.docs.ns.cmis.messaging._200908.CmisContentStreamType contentStream,
			java.lang.String checkinComment,
			java.util.List<java.lang.String> policies,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType addACEs,
			org.oasis_open.docs.ns.cmis.core._200908.CmisAccessControlListType removeACEs,
			javax.xml.ws.Holder<org.oasis_open.docs.ns.cmis.messaging._200908.CmisExtensionType> extension)
			throws CmisException {
		LOG.info("Executing operation checkIn");
		System.out.println(repositoryId);
		System.out.println(objectId.value);
		System.out.println(major);
		System.out.println(properties);
		System.out.println(contentStream);
		System.out.println(checkinComment);
		System.out.println(policies);
		System.out.println(addACEs);
		System.out.println(removeACEs);
		System.out.println(extension.value);
		try {
		} catch (java.lang.Exception ex) {
			ex.printStackTrace();
			throw new RuntimeException(ex);
		}
		// throw new CmisException("cmisException...");
	}

}
